(function ($) {
    $.fn.typewrite = function (options) {
        var settings = $.extend({
            speed: 12,
            blinkSpeed: 2,
            showCursor: true,
            blinkingCursor: true,
            cursor: "|",
            selectedBackground: "#F1F1F1",
            selectedText: "#333333"
        }, options);

        settings.blinkSpeed = 1000 / settings.blinkSpeed;

        if (settings.showCursor) {
            $(this).html('<span></span><span class="blinkingCursor">' + settings.cursor + "</span>");
            if (settings.blinkingCursor) {
                setInterval(function () {
                    $(".blinkingCursor").toggle();
                }, settings.blinkSpeed);
            }
        } else {
            $(this).html("<span></span>");
        }

        settings.mainel = this;
        settings.el = $(this).children("span")[0];
        settings.speed = 1000 / settings.speed;
        var actions = options.actions;
        settings.queue = actions.length;

        $(settings.mainel).trigger("typewriteStarted");

        actions.forEach(function (element, index) {
            if (Object.keys(element)[0] !== "select") {
                removeSelection();
            }
            switch (Object.keys(element)[0]) {
                case "type":
                    element.type === "<br>" ? newLine() : typeText($("<div/>").html(element.type).text());
                    break;
                case "delay":
                    delay(element.delay);
                    break;
                case "speed":
                    settings.speed = 1000 / element.speed;
                    break;
                case "remove":
                    remove(element.remove);
                    break;
                case "select":
                    select(element.select);
                    break;
            }
        });

        var done = setInterval(function () {
            if (settings.queue === 0) {
                clearInterval(done);
                $(settings.mainel).trigger("typewriteComplete");
            }
        }, 500);

        function select(action) {
            var charLen = action.to - action.from;
            var spanOpen = '<span class="typewriteSelected" style="background-color:' + settings.selectedBackground + '; color: ' + settings.selectedText + '">';
            var blankstr = new Array(charLen + 1).join(" ");
            var chars = blankstr.split("");
            chars.forEach(function (_, index) {
                $(settings.el).delay(settings.speed).queue(function (next) {
                    var newTo = action.to - (index + 1);
                    var currentString = $(settings.el).text();
                    var newString = currentString.slice(0, newTo) + spanOpen + currentString.slice(newTo, action.to) + "</span>" + currentString.slice(action.to);
                    $(this).html(newString.replace(/\n/g, "<br>"));
                    next();
                    if (index === chars.length - 1) {
                        settings.queue--;
                        $(settings.mainel).trigger("typewriteSelected", action);
                    }
                });
            });
        }

        function delay(time) {
            $(settings.el).delay(time).queue(function (next) {
                next();
                settings.queue--;
                $(settings.mainel).trigger("typewriteDelayEnded");
            });
        }

        function remove(remove) {
            var blankstr = new Array(remove.num + 1).join(" ");
            var chars = blankstr.split("");
            var removeType = remove.type || "stepped";

            if (removeType !== "stepped" && removeType !== "whole") {
                removeType = "stepped";
            }

            if (removeType === "stepped") {
                chars.forEach(function (_, index) {
                    $(settings.el).delay(settings.speed).queue(function (next) {
                        var currText = $(this).text().slice(0, -1);
                        $(this).html(currText.replace(/\n/g, "<br>"));
                        next();
                        if (index === chars.length - 1) {
                            settings.queue--;
                            $(settings.mainel).trigger("typewriteRemoved", remove);
                        }
                    });
                });
            } else {
                $(settings.el).delay(settings.speed).queue(function (next) {
                    var currText = $(this).text().slice(0, -remove.num);
                    $(this).html(currText.replace(/\n/g, "<br>"));
                    next();
                    settings.queue--;
                    $(settings.mainel).trigger("typewriteRemoved", remove);
                });
            }
        }

        function typeText(text) {
            var chars = text.split("");
            chars.forEach(function (char, index) {
                $(settings.el).delay(settings.speed).queue(function (next) {
                    $(this).html($(this).html() + char);
                    next();
                    if (index === chars.length - 1) {
                        settings.queue--;
                        $(settings.mainel).trigger("typewriteTyped", text);
                    }
                });
            });
        }

        function newLine() {
            $(settings.el).delay(settings.speed).queue(function (next) {
                $(this).html($(this).html() + "<br>");
                next();
                settings.queue--;
                $(settings.mainel).trigger("typewriteNewLine");
            });
        }

        function removeSelection() {
            var selection = $(".typewriteSelected");
            if (selection.length > 0) {
                selection.replaceWith(selection.text());
            }
        }
    };
})(jQuery);
